/**
 * Generate mixin SCSS for pdfjs web.css .textLayer styles
 *
 * Usage: node <this_script> <original pdfjs web css> <output scss>
 */
const postcss = require('postcss');
const fs = require('fs');

const originalPdfjsWebCss = process.argv[2];
const mixinPdfjsWebScss = process.argv[3];

// load the original style
const cssText = fs.readFileSync(originalPdfjsWebCss, { encoding: 'utf-8' });
const cssRoot = postcss.parse(cssText);

// remove rules not related to .textLayer
cssRoot.walkRules(rule => {
  if (rule.selector.includes('.textLayer')) {
    return;
  }
  rule.remove();
});

// keep copyright comment
cssRoot.walkComments(comment => {
  if (comment.text.includes('Copyright')) {
    return;
  }
  comment.remove();
});

// write mixin scss
const generatedCss = `
/* DO NOT EDIT. THIS FILE IS AUTOMATICALLY GENERATED FROM \`update-styles-from-pdfjs.sh\`. */
@mixin pdfjsTextLayer {
  // CSS from ~pdfjs-dist/web/pdf_viewer.css for scoped style
  ${cssRoot.toString()}
}
`;

fs.writeFileSync(mixinPdfjsWebScss, generatedCss, { encoding: 'utf-8' });
